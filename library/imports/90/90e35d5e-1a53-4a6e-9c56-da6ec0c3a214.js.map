{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "target",
    "default",
    "type",
    "Prefab",
    "leftContent",
    "Node",
    "content",
    "onLoad",
    "self",
    "ajax",
    "url",
    "dataType",
    "jsonp",
    "success",
    "msg",
    "p",
    "i",
    "length",
    "item",
    "instantiate",
    "addChild",
    "x",
    "y",
    "height",
    "name",
    "lab",
    "getComponent",
    "string",
    "rolename",
    "fulevel",
    "color",
    "Color",
    "console",
    "log",
    "selectBn",
    "bn",
    "id",
    "rfid",
    "node",
    "on",
    "skillList",
    "event",
    "button",
    "Button",
    "window",
    "wuPin",
    "jinengList"
  ],
  "mappings": ";;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACTC,gBAAQ;AACTC,qBAAS,IADA;AAETC,kBAAMP,GAAGQ;AAFA,SADC;AAKZC,qBAAYT,GAAGU,IALH;AAMRC,iBAASX,GAAGU;AANJ,KAHP;;AAsBL;AACAE,YAAQ,kBAAY;AACxB,YAAIC,OAAO,IAAX;AACQC,aAAK;AACDP,kBAAM,KADL;AAED;AACAQ,iBAAI,gEAHH;AAIDC,sBAAU,OAJT;AAKDC,mBAAO,eALN,EAKsB;AACvBC,qBAAS,iBAAUC,GAAV,EAAe;AACpB,oBAAIC,IAAID,IAAIA,GAAZ;AACA;AACA,qBAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAID,EAAEE,MAAtB,EAA8BD,GAA9B,EAAmC;AAC/B,wBAAIE,OAAOvB,GAAGwB,WAAH,CAAeX,KAAKR,MAApB,CAAX;AACCQ,yBAAKF,OAAL,CAAac,QAAb,CAAsBF,IAAtB;AACDA,yBAAKG,CAAL,GAAQ,CAAR;AACCH,yBAAKI,CAAL,GAAQ,CAAC,CAAD,GAAKN,CAAL,GAASE,KAAKK,MAAtB;AACDL,yBAAKM,IAAL,GAAY,aAAaR,CAAzB;AACAR,yBAAKJ,WAAL,CAAiBmB,MAAjB,GAA0B,CAACP,IAAI,CAAL,IAAUE,KAAKK,MAAf,GAAsB,EAAhD;;AAEA,wBAAIE,MAAMP,KAAKQ,YAAL,CAAkB,WAAlB,CAAV;;AAEAD,wBAAIX,GAAJ,CAAQa,MAAR,GAAeZ,EAAEC,CAAF,EAAKY,QAAL,GAAc,GAAd,GAAkBb,EAAEC,CAAF,EAAKa,OAAvB,GAA+B,IAA9C;AACD;AACC,wBAAGb,IAAE,CAAF,IAAK,CAAR,EAAU;AACNE,6BAAKY,KAAL,GAAW,IAAInC,GAAGoC,KAAP,CAAa,CAAb,EAAe,CAAf,EAAiB,EAAjB,CAAX;AACCC,gCAAQC,GAAR,CAAYf,KAAKY,KAAjB;AACD;AACH;AACAL,wBAAIS,QAAJ,CAAaV,IAAb,GAAkB,WAASR,CAA3B;AACD;AACA;AACA;AACA;AACA;AACA;AACC;AACC,wBAAImB,KAAGV,IAAIS,QAAJ,CAAaR,YAAb,CAA0B,cAA1B,CAAP;AACAS,uBAAGC,EAAH,GAAMrB,EAAEC,CAAF,EAAKqB,IAAX;AACF;AACAZ,wBAAIS,QAAJ,CAAaI,IAAb,CAAkBC,EAAlB,CAAqB,OAArB,EAA6B/B,KAAKgC,SAAlC,EAA6ChC,IAA7C;AACD;AACD;AACC;AACC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACH;AACJ;AArDA,SAAL;AAuDH,KAhFI;AAiFLgC,eAAU,mBAASC,KAAT,EAAgB;AACtB;AACA,YAAIH,OAAOG,MAAMzC,MAAjB;AACC,YAAImC,KAAGG,KAAKZ,YAAL,CAAkB,cAAlB,CAAP;AACD,YAAIgB,SAASJ,KAAKZ,YAAL,CAAkB/B,GAAGgD,MAArB,CAAb;AACAC,eAAOC,KAAP,CAAaC,UAAb,GAAwBX,GAAGC,EAA3B;AACAJ,gBAAQC,GAAR,CAAYE,GAAGC,EAAf;AACA;AACH;AAzFI,CAAT",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n       target: {\r\n      default: null,\r\n      type: cc.Prefab,\r\n       },\r\n    leftContent:cc.Node,\r\n        content: cc.Node,\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\nvar self = this;\r\n        ajax({\r\n            type: 'GET',\r\n            // url: \"\" + localhost + \"gchang/applishi\",\r\n            url:\"http://192.168.130.18:8080/cocos2dWuPin/getJiNengShuList?id=98\",\r\n            dataType: 'jsonp',\r\n            jsonp: \"jsonpCallback\",//服务端用于接收callback调用的function名的参数\r\n            success: function (msg) {\r\n                var p = msg.msg;\r\n                //alert(p);\r\n                for (var i = 0; i < p.length; i++) {\r\n                    var item = cc.instantiate(self.target);\r\n                     self.content.addChild(item);\r\n                    item.x =1;\r\n                     item.y= -1 * i * item.height;\r\n                    item.name = 'userList' + i;\r\n                    self.leftContent.height = (i + 1) * item.height+20;\r\n                    \r\n                    var lab = item.getComponent(\"wuPinList\");\r\n                   \r\n                    lab.msg.string=p[i].rolename+\"(\"+p[i].fulevel+\"级)\";\r\n                   // lab.id.string=p[i].rfid;\r\n                    if(i%2!=0){\r\n                        item.color=new cc.Color(0,0,49);\r\n                         console.log(item.color)\r\n                        //lab.Node.Color=\"WHITE\";\r\n                    }\r\n                     lab.selectBn.name='button'+i;\r\n                    // var clickEventHandler = new cc.Component.EventHandler();\r\n                    // clickEventHandler.target = lab.selectBn.node; //这个 node 节点是你的事件处理代码组件所属的节点\r\n                    // clickEventHandler.component ='button0';\r\n                    // clickEventHandler.handler = \"skillList\";\r\n                    // clickEventHandler.customEventData =p[i].id;\r\n                    //wuPin.jinengList=\"10311\"\r\n                     //lab.selectBn.id.string=p[i].rfid\r\n                      var bn=lab.selectBn.getComponent(\"jiNengButton\");\r\n                      bn.id=p[i].rfid;\r\n                    // lab.selectBn.setId(new cc.Label())\r\n                    lab.selectBn.node.on('click',self.skillList, self)\r\n                   //lab.selectBn.clickEvents.push(clickEventHandler);\r\n                  // console.log (bn.id)\r\n                   // console.log(p[i].id)\r\n                    //s += \" <p class=\\\"yaoping\\\" style='color:#FFF3AE'>第\" + p[i].id + \"期，开出\" + p[i].num1 + \",\" + p[i].num2 + \",\" + p[i].num3 + \"&nbsp;&nbsp;\" + p[i].result + \"</p>\";\r\n                    // var item = cc.instantiate(self.itemPrefab);\r\n                    // self.leftContent.addChild(item);\r\n                    // item.x = 0;\r\n                    // item.y = -1 * i * item.height;\r\n                    // item.name = 'history' + i;\r\n                    // self.content.height = (i + 1) * item.height;\r\n\r\n                    // item = item.getComponent('HistoryItem');\r\n                    // var labelStr = \"第\" + p[i].id + \"期，开出\" + p[i].num1 + \",\" + p[i].num2 + \",\" + p[i].num3 + \"\\t\\t\" + p[i].result;\r\n                    // item.setMsg(labelStr);\r\n                }\r\n            }\r\n        });\r\n    },\r\n    skillList:function(event) {\r\n        //这里 event 是一个 Touch Event 对象，你可以通过 event.target 取到事件的发送节点\r\n        var node = event.target;\r\n         var bn=node.getComponent(\"jiNengButton\");\r\n        var button = node.getComponent(cc.Button);\r\n        window.wuPin.jinengList=bn.id;\r\n        console.log(bn.id)\r\n        //这里的 customEventData 参数就等于你之前设置的 \"foobar\"\r\n    },\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}