{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "self",
    "bsid",
    "zbid",
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "bsname",
    "Label",
    "level",
    "xiaoguo",
    "jieshao",
    "RichText",
    "img",
    "Sprite",
    "onLoad",
    "click",
    "node",
    "destroy",
    "init",
    "data",
    "string",
    "zwName",
    "zwLevel",
    "zwXiaoGuo",
    "zwMiaoShu",
    "id",
    "xqClick",
    "param",
    "zhaungBeiDetailsZbid",
    "ajaxData",
    "HxsgUrl",
    "mosaicGemtoZhuangBei",
    "log",
    "code",
    "showAlert",
    "director",
    "loadScene",
    "HxsgScenes",
    "zhuangbei",
    "message"
  ],
  "mappings": ";;AAAA,IAAIA,IAAJ;AACA,IAAIC,IAAJ;AACA,IAAIC,IAAJ;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,gBAAQL,GAAGM,KADH;AAERC,eAAOP,GAAGM,KAFF;AAGRE,iBAASR,GAAGM,KAHJ;AAIRG,iBAAST,GAAGU,QAJJ;AAKRC,aAAKX,GAAGY;AALA,KAHP;;AAqBL;AACAC,YAAQ,kBAAY;AAChBhB,eAAO,IAAP;AACH,KAxBI;AAyBLiB,WAAO,iBAAY;AACfjB,aAAKkB,IAAL,CAAUC,OAAV;AACH,KA3BI;AA4BLC,UAAM,cAAUC,IAAV,EAAgB;AAClBrB,aAAKQ,MAAL,CAAYc,MAAZ,GAAqBD,KAAKE,MAA1B;AACAvB,aAAKU,KAAL,CAAWY,MAAX,GAAoBD,KAAKG,OAAzB;AACAxB,aAAKW,OAAL,CAAaW,MAAb,GAAsBD,KAAKI,SAA3B;AACAzB,aAAKY,OAAL,CAAaU,MAAb,GAAsBD,KAAKK,SAA3B;AACAzB,eAAOoB,KAAKM,EAAZ;AACH,KAlCI;AAmCLC,aAAS,mBAAY;;AAEjB,YAAIC,QAAQ,EAAE,QAAQ5B,IAAV,EAAgB,QAAQ6B,qBAAqBH,EAA7C,EAAZ;AACAI,iBAASC,QAAQC,oBAAjB,EAAuCJ,KAAvC,EAA8C,UAAUR,IAAV,EAAgB;AAC1DlB,eAAG+B,GAAH,CAAOb,IAAP;AACA,gBAAIA,KAAKc,IAAL,GAAY,KAAhB,EAAuB;AACnBC,0BAAUf,KAAKA,IAAf,EAAqB,YAAY;AAC7BlB,uBAAGkC,QAAH,CAAYC,SAAZ,CAAsBC,WAAWC,SAAjC;AACH,iBAFD,EAEG,YAAY;AACXrC,uBAAGkC,QAAH,CAAYC,SAAZ,CAAsBC,WAAWC,SAAjC;AACH,iBAJD;AAOH,aARD,MAQO;AACHJ,0BAAU,YAAYf,KAAKoB,OAA3B,EAAoC,YAAY;AAAEtC,uBAAGkC,QAAH,CAAYC,SAAZ,CAAsBC,WAAWC,SAAjC;AAA8C,iBAAhG,EAAkG,YAAY;AAAErC,uBAAGkC,QAAH,CAAYC,SAAZ,CAAsBC,WAAWC,SAAjC;AAA8C,iBAA9J;AAEH;AAEJ,SAfD;AAmBH;AACD;AACA;;AAEA;AA7DK,CAAT",
  "file": "unknown",
  "sourcesContent": [
    "var self;\r\nvar bsid;\r\nvar zbid;\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        bsname: cc.Label,\r\n        level: cc.Label,\r\n        xiaoguo: cc.Label,\r\n        jieshao: cc.RichText,\r\n        img: cc.Sprite,\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        self = this;\r\n    },\r\n    click: function () {\r\n        self.node.destroy();\r\n    },\r\n    init: function (data) {\r\n        self.bsname.string = data.zwName;\r\n        self.level.string = data.zwLevel;\r\n        self.xiaoguo.string = data.zwXiaoGuo;\r\n        self.jieshao.string = data.zwMiaoShu;\r\n        bsid = data.id;\r\n    },\r\n    xqClick: function () {\r\n\r\n        let param = { 'bsId': bsid, 'zbId': zhaungBeiDetailsZbid.id };\r\n        ajaxData(HxsgUrl.mosaicGemtoZhuangBei, param, function (data) {\r\n            cc.log(data)\r\n            if (data.code = \"000\") {\r\n                showAlert(data.data, function () {\r\n                    cc.director.loadScene(HxsgScenes.zhuangbei);\r\n                }, function () {\r\n                    cc.director.loadScene(HxsgScenes.zhuangbei);\r\n                });\r\n\r\n\r\n            } else {\r\n                showAlert(\"服务器崩溃了:\" + data.message, function () { cc.director.loadScene(HxsgScenes.zhuangbei); }, function () { cc.director.loadScene(HxsgScenes.zhuangbei); });\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n\r\n    }\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}