{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "self",
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "feng",
    "SpriteFrame",
    "wei",
    "luan",
    "gong",
    "yin",
    "su",
    "gu",
    "du",
    "onLoad",
    "getSpriteFrame",
    "name",
    "log"
  ],
  "mappings": ";;AAAA,IAAIA,IAAJ;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,cAAKL,GAAGM,WADA;AAERC,aAAIP,GAAGM,WAFC;AAGRE,cAAKR,GAAGM,WAHA;AAIRG,cAAKT,GAAGM,WAJA;AAKRI,aAAIV,GAAGM,WALC;AAMRK,YAAGX,GAAGM,WANE;AAORM,YAAGZ,GAAGM,WAPE;AAQRO,YAAGb,GAAGM;AARE,KAHP;;AAwBL;AACAQ,YAAQ,kBAAY;AAClBf,eAAK,IAAL;AACD,KA3BI;AA4BNgB,oBAAe,wBAASC,IAAT,EAAc;AACzBhB,WAAGiB,GAAH,CAAO,KAAKD,IAAL,CAAP;;AAEC,eAAO,KAAKA,IAAL,CAAP;AAEJ;AACA;AACA;;AAEA;AArCK,CAAT",
  "file": "unknown",
  "sourcesContent": [
    "var self;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        feng:cc.SpriteFrame,\r\n        wei:cc.SpriteFrame,\r\n        luan:cc.SpriteFrame,\r\n        gong:cc.SpriteFrame,\r\n        yin:cc.SpriteFrame,\r\n        su:cc.SpriteFrame,\r\n        gu:cc.SpriteFrame,\r\n        du:cc.SpriteFrame,\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n      self=this;\r\n    },\r\n   getSpriteFrame:function(name){\r\n       cc.log(this[name])\r\n     \r\n        return this[name];\r\n\r\n   }\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}